- key: ping
  kind: Behavior
  expect:
    http:
      method: GET
      path: /ping
  actions:
    - reply_http:
        status_code: 200
        body: OK
        headers:
          Content-Type: text/xml

- key: hello
  kind: Behavior
  expect:
    http:
      method: GET
      path: /hello
  actions:
    - reply_http:
        status_code: 200
        body: >
          { "hello": "world" }

- key: slow_endpoint
  kind: Behavior
  expect:
    http:
      method: GET
      path: /slow_endpoint
  actions:
    - sleep:
        duration: 1s
    - reply_http:
        status_code: 200
        body: OK

- key: query_string
  kind: Behavior
  expect:
    condition: '{{.HTTPQueryString | contains "foo=bar" }}'
    http:
      method: POST
      path: /query_string
  actions:
    - reply_http:
        status_code: 200
        body: '{{.HTTPQueryString}}'

- key: header-token-200
  kind: Behavior
  expect:
    condition: '{{.HTTPHeader.Get "X-Token" | eq "t1234" | and (.HTTPHeader.Get "Y-Token" | eq "t1234")}}'
    http:
      method: GET
      path: /token
  actions:
    - reply_http:
        status_code: 200
        body: OK

- key: header-token-401
  kind: Behavior
  expect:
    condition: '{{.HTTPHeader.Get "X-Token" | ne "t1234"}}'
    http:
      method: GET
      path: /token
  actions:
    - reply_http:
        status_code: 401
        body: Invalid X-Token

- key: large_xml
  kind: Behavior
  expect:
    http:
      method: GET
      path: /large_xml
  actions:
    - reply_http:
        status_code: 200
        headers:
          Content-Type: text/xml
        body: >
          <xml>
            {{` <note>
                  <to>Tove</to>
                  <from>Jani</from>
                  <heading name=\"heading\">Reminder</heading>
                  <body>Don't forget me this weekend!</body>
                </note>
              ` | htmlEscapeString }}
          </xml>


- key: soap_example
  kind: Behavior
  expect:
    http:
      method: POST
      path: /soap_example
  actions:
    - reply_http:
        status_code: 200
        headers:
          Content-Type: "text/xml; charset = utf-8"
        body: >
          <?xml version = "1.0"?>
          <SOAP-ENV:Envelope
             xmlns:SOAP-ENV = "http://www.w3.org/2001/12/soap-envelope"
             SOAP-ENV:encodingStyle = "http://www.w3.org/2001/12/soap-encoding">

             <SOAP-ENV:Body xmlns:m = "http://www.xyz.org/quotation">
                <m:GetQuotationResponse>
                   <m:Quotation>Here is the quotation</m:Quotation>
                </m:GetQuotationResponse>
             </SOAP-ENV:Body>
          </SOAP-ENV:Envelope>

- key: http-request-template
  kind: Template
  template: >
    { "http_path": "{{.HTTPPath}}", "http_headers": "{{.HTTPHeader}}" }

- key: color-template
  kind: Template
  template: >
    { "color": "{{.color}}" }

- key: teapot
  kind: AbstractBehavior
  expect:
    http:
      method: GET
      path: /teapot
  actions:
    - reply_http:
        status_code: 418
        body: >
          {
            "request-info": {{ template "http-request-template" . }},
            "teapot-info": {{ template "color-template" .Values }}
          }

- key: purple-teapot
  kind: Behavior
  extend: teapot
  values:
    color: purple
